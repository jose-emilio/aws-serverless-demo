AWSTemplateFormatVersion: '2010-09-09'

Parameters:
  email:
    Type: String
    Default: joseemilio@aws-training.org
        
Resources:

  OrigenS3:
    Type: AWS::S3::Bucket
    DependsOn:
      - PermisosSNSaS3
    Properties:
      BucketName: !Sub 
        - origen-${sufijo}
        - sufijo: !Select [2, !Split ["/", !Ref "AWS::StackId"]]
      NotificationConfiguration:
        TopicConfigurations:
          - Topic: !Ref TemaSNS
            Event: s3:ObjectCreated:*
            Filter: 
              S3Key:
                Rules:
                  - Name: suffix
                    Value: ".jpg"

  DestinoS3:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub 
        - destino-${sufijo}
        - sufijo: !Select [2, !Split ["/", !Ref "AWS::StackId"]]

  Escalado:
      Type: AWS::Lambda::Function 
      Properties:
          Code: resize/resize.zip
          PackageType: Zip
          MemorySize: 256
          Handler: resize.handler
          Runtime: python3.8
          Role: !GetAtt RolEscalado.Arn
          Timeout: 60
          Layers:
            - !Sub arn:aws:lambda:${AWS::Region}:770693421928:layer:Klayers-p38-Pillow:10
          Environment:
            Variables:
              colaWeb: !GetAtt ColaWeb.QueueName
              colaThumbnail: !GetAtt ColaThumbnail.QueueName
              tema: !Ref TemaSNSUsuario
              bucket: !Ref DestinoS3
              tabla: !Ref Tabla
  
  ColaWebMapping:
    Type: AWS::Lambda::EventSourceMapping
    Properties:
      BatchSize: 10
      Enabled: true
      EventSourceArn: !GetAtt ColaWeb.Arn
      FunctionName: !GetAtt Escalado.Arn

  ColaThumbnailMapping:
    Type: AWS::Lambda::EventSourceMapping
    Properties:
      BatchSize: 10
      Enabled: true
      EventSourceArn: !GetAtt ColaThumbnail.Arn
      FunctionName: !GetAtt Escalado.Arn

  RolEscalado:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                  - lambda.amazonaws.com
            Action:
              - sts:AssumeRole
      Policies:
        - PolicyName: PoliticaWeb
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - sqs:ReceiveMessage
                  - sqs:DeleteMessage
                  - sqs:GetQueueAttributes
                  - sqs:GetQueueUrl
                Resource: 
                  - !GetAtt ColaWeb.Arn
                  - !GetAtt ColaThumbnail.Arn
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: "*"
              - Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:HeadObject
                Resource: !Sub arn:${AWS::Partition}:s3:::${OrigenS3}/*
              - Effect: Allow
                Action:
                  - s3:PutObject
                  - s3:GetObject
                Resource: !Sub arn:${AWS::Partition}:s3:::${DestinoS3}/*
              - Effect: Allow
                Action:
                  - sns:Publish
                Resource: !Ref TemaSNSUsuario
              - Effect: Allow
                Action:
                  - dynamodb:PutItem
                Resource: !GetAtt Tabla.Arn

  Tabla:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
        - AttributeName: signed_url
          AttributeType: S
      KeySchema:
        - AttributeName: signed_url
          KeyType: HASH
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5
      TimeToLiveSpecification:
        AttributeName: ttl
        Enabled: true

  ColaWeb:
    Type: AWS::SQS::Queue
    Properties:
      VisibilityTimeout: 240

  PermisosColaWebSNS:
    Type: AWS::SQS::QueueInlinePolicy
    Properties:
      Queue: !Ref ColaWeb
      PolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service: sns.amazonaws.com
            Resource: !GetAtt ColaWeb.Arn
            Action: sqs:SendMessage
            Condition:
              ArnEquals:
                aws:SourceArn: !Ref TemaSNS

  ColaThumbnail:
    Type: AWS::SQS::Queue
    Properties:
      VisibilityTimeout: 240

  PermisosColaThumbnailSNS:
    Type: AWS::SQS::QueueInlinePolicy
    Properties:
      Queue: !Ref ColaThumbnail
      PolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service: sns.amazonaws.com
            Resource: !GetAtt ColaThumbnail.Arn
            Action: sqs:SendMessage
            Condition:
              ArnEquals:
                aws:SourceArn: !Ref TemaSNS

  TemaSNS:
    Type: AWS::SNS::Topic
    Properties:
      Subscription:
        - Endpoint: !GetAtt ColaWeb.Arn
          Protocol: sqs
        - Endpoint: !GetAtt ColaThumbnail.Arn
          Protocol: sqs

  TemaSNSUsuario:
    Type: AWS::SNS::Topic
    Properties:
      Subscription:
        - Endpoint: !Ref email
          Protocol: email

  PermisosSNSaS3:
    Type: AWS::SNS::TopicPolicy
    Properties:
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: s3.amazonaws.com
            Action: sns:Publish
            Resource: !Ref TemaSNS
            Condition:
              ArnEquals:
                aws:SourceArn: !Sub 
                  - arn:${AWS::Partition}:s3:::origen-${sufijo}
                  - sufijo: !Select [2, !Split ["/", !Ref "AWS::StackId"]]
      Topics:
        - !Ref TemaSNS

